theme(legend.position = "none")
# is it different for males and females?
ggplot(backpack) +
aes(x = backpain_labelled, fill = backpain_labelled) +
geom_bar() +
labs(x = "backpain reported", y = "student count") +
facet_wrap(~sex) +
scale_fill_manual(values=c('#f0ca41', '#5022bd'))+
theme(legend.position = "none")
# make the labels nice
pain_labels <- c("backpain: no", "backpain: yes")
names(pain_labels) <- c("No", "Yes")
sex_labels <- c("sex: female", "sex: male")
names(sex_labels) <- c("Female", "Male")
ggplot(backpack) +
aes(x = body_weight, y = backpack_weight, color = backpain_labelled) +
geom_point() +
facet_grid(sex ~ backpain_labelled,
labeller = labeller(backpain_labelled = pain_labels, sex = sex_labels)) +
labs(x = "\n body weight", y = "backpack weight \n") +
scale_color_manual(values=c('#f0ca41', '#5022bd'))+
theme(legend.position = "none")
ggplot(backpack) +
geom_histogram(aes(x = ratio, fill = backpain_labelled), bins = 20, col = "white") +
facet_grid(sex ~ backpain_labelled,
labeller = labeller(backpain_labelled = pain_labels, sex = sex_labels)) +
labs(x = "\n body weight: backpack weight ratio") +
scale_fill_manual(values=c('#f0ca41', '#5022bd'))+
theme(legend.position = "none")
?labeller
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, fig.align = "center")
library(ggplot2)
library(CodeClanData)
ggplot(pets) +
aes(age, weight, colour = sex) +
geom_point()
ggplot(pets) +
aes(age, weight, colour = sex) +
geom_point()
ggplot(pets) +
aes(age, weight, colour = sex) +
geom_point() +
scale_x_continuous(breaks = 1:13) # adjust breaks here
ggplot(pets) +
aes(age, weight, colour = sex) +
geom_point()  +
scale_x_continuous(breaks = seq(13)) +
scale_y_continuous(breaks = c(6, 8, 10), labels = c("6" = "Small","8" = "Medium","10" = "Big"))
x_labels <- c("1" = "Baby", "6" = "All grown-up", "10" = "Over \n the hill")
y_labels <- c("6" = "Small", "8" = "Medium", "10" = "Big")
ggplot(pets) +
aes(age, weight, colour = sex) +
geom_point() +
scale_x_continuous(breaks = c(1, 6, 10),labels = x_labels) +
scale_y_continuous(breaks = c(6, 8, 10),labels = y_labels)
ggplot(flatPrices) +
geom_line(aes(x = Date, y = AvgFlatPrice)) +
ylab("average flat price\n")
ggplot(flatPrices) +
geom_line(aes(x = Date, y = AvgFlatPrice)) +
scale_y_continuous(labels = scales::comma) +
ylab("average flat price (£) \n")
ggplot(flatPrices) +
geom_line(aes(x = Date, y = AvgFlatPrice)) +
scale_y_continuous(labels = scales::dollar) +
ylab("average flat price \n")
ggplot(flatPrices) +
geom_line(aes(x = Date, y = AvgFlatPrice)) +
scale_y_continuous(labels = scales::dollar_format(prefix = "£")) +
ylab("average flat price \n")
library(dplyr)
# create the percent column
flatPrices <- flatPrices %>%
mutate(percent_change = AvgFlatPrice/AvgFlatPrice[1])
ggplot(flatPrices) +
geom_line(aes(x = Date, y = percent_change)) +
scale_y_continuous(labels = scales::percent) +
ylab("percent change relative to start\n")
ggplot(pets, aes(age, weight)) +
geom_point(aes(colour = sex), size = 4) +
scale_x_continuous(
name = "Age",
breaks = seq(13),
limits = c(1, 8)
) +
scale_y_continuous(
name = "Weight",
breaks = c(6, 8, 10),
labels = c(
"6" = "Light",
"8" = "Normal",
"10" = "Heavy"
)
) +
scale_color_discrete(name = "Sex")
ggplot(pets, aes(age, weight)) +
geom_point(aes(colour = sex), size = 4) +
scale_x_continuous(
name = "Age",
breaks = seq(13),
limits = c(1, 8)
) +
scale_y_continuous(
name = "Weight",
breaks = c(6, 8, 10),
labels = c(
"6" = "Light",
"8" = "Normal",
"10" = "Heavy"
),
limits = c(NA, 8)
) +
scale_color_discrete(name = "Sex")
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
scale_x_continous(trans = "reverse") +
scale_y_continuous(trans = "log10", labels = scales::comma) +
scales_x_reverse() +
scales_y_log10()
ggplot(pets, aes(age, weight)) +
library(ggplot2)
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
)
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point()
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
scale_x_continous(trans = "reverse")
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
scale_x_continuous(trans = "reverse")
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "log10", labels = scales::comma) +
scales_x_reverse() +
scales_y_log10()
ggplot(whisky) +
aes(x = YearFound, y = Capacity, colour = Region) +
geom_point() +
scale_x_continuous(trans = "reverse") +
scale_y_continuous(trans = "log10", labels = scales::comma)
knitr::opts_chunk$set(echo = TRUE)
hcl(200,50,50)
library(ggplot2)
library(CodeClanData)
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
---
title: "Untitled"
author: "Steph B"
date: "24/03/2020"
output: html_document
editor_options:
chunk_output_type: console
---
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
library(ggplot2)
library(CodeClanData)
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "light blue", high = "dark blue")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "light blue", high = "dark blue")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "light blue", high = "dark blue")
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "light blue", high = "dark blue")
library(tidyverse)
library(CodeClanData)
pets
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point()
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_color_gradient(low = "gray0", high = "gray100")
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_color_gradient(low = "light blue", high = "dark blue")
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_color_gradient(low = "pink", high = "dark red")
# three colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_colour_gradient2(midpoint = 15, low = "light blue", high = "dark blue", mid = "blue")
# three colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_colour_gradient2(midpoint = 15, low = "light blue", high = "dark blue", mid = "white")
# two colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_color_gradient(low = "pink", high = "dark red")
# two colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_color_gradient(low = "red", high = "dark red")
# three colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point() +
scale_colour_gradient2(midpoint = 15, low = "yellow", high = "magenta", mid = "orange")
# two colour gradient
ggplot(pets) +
aes(weight, age, colour = sleep) +
geom_point()
volcano
head(volcano)
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE)
min(volcano$x)
min(volcano$height)
max(volcano$height)
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(5))
?colorspace
?terrain_hcl
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(10))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(200))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(20))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(120))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(2))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(1))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(2))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(3))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(8))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(6))
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(60))
ggplot(volcano) +
geom_raster(aes(x,y, fill = height), interpolate = TRUE) +
scale_fill_distiller(palette = "RdPu")
ggplot(temp_df) +
geom_raster(aes(x = month, y = year, fill = max_temp))
plot <- ggplot(temp_df) +
geom_raster(aes(x = month, y = year, fill = max_temp))
plot +
scale_fill_gradient(high = "red", low = "blue")
median(tempdf)
median(temp_df)
temp_df
median(temp_df$max_temp)
plot +
scale_fill_gradient2(high = "red", mid = "white", low = "blue", midpoint = median(temp_df$max_temp))
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
plot +
scale_fill_gradientn(colours = colorspace::diverge_hcl(7)) # using a different pallet from colour space
plot +
scale_fill_gradientn(colors = colorspace::hcl(15))
plot +
scale_fill_gradientn(colors = colorspace::terrain_hcl(15))
plot +
scale_fill_gradientn(colors = colorspace::diverge_hcl(15))
plot +
scale_fill_distiller(palette = "RdYlGn")
plot +
scale_fill_distiller(palette = "RdYlGn")
ggplot(pets) +
aes(x = animal, fill = interaction(sex, animal)) +
geom_bar() +
scale_fill_hue(h = c(120, 300), c = 40, l = 45)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
# Chunk 2
hcl(200, 50, 50)
# Chunk 3
library(ggplot2)
library(CodeClanData)
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "gray0", high = "gray100")
# Chunk 4
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient(low = "light blue", high = "dark blue")
# Chunk 5
ggplot(pets, aes(weight, age, colour = sleep)) +
geom_point() +
scale_colour_gradient2(midpoint = 15, low = "blue", high = "red", mid = "white")
# Chunk 6
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = TRUE) +
scale_fill_gradientn(colours = colorspace::terrain_hcl(5))
# Chunk 7
ggplot(volcano) +
geom_raster(aes(x, y, fill = height), interpolate = T) +
scale_fill_distiller(palette = "RdPu")
# Chunk 8
ggplot(temp_df) +
geom_raster(aes(x = month, y = year, fill = max_temp))
# Chunk 9
plot <-
ggplot(temp_df) +
geom_raster(aes(x = month, y = year, fill = max_temp))
# Chunk 10
plot +
scale_fill_gradient(high = "red", low = "blue")
# Chunk 11
plot +
scale_fill_gradient2(high = "red", mid = "white", low = "blue", midpoint = mean(temp_df$max_temp))
# Chunk 12
plot +
scale_fill_gradientn(colours = colorspace::diverge_hcl(7)) # using a different pallet from colour space
# Chunk 13
plot +
scale_fill_distiller(palette = "RdYlGn")
# Chunk 14
ggplot(pets) +
aes(x = animal, fill = interaction(sex, animal)) +
geom_bar() +
scale_fill_hue()
ggplot(pets) +
aes(x = animal, fill = interaction(sex, animal)) +
geom_bar() +
scale_fill_hue(h = c(120, 300), c = 40, l = 45)
library(CodeClanData)
library(ggplot2)
head(iqscores)
iq_scores
head(iq_scores)
ggplot(iq_scores) +
aes(x = person, y = score, fill = test) +
geom_col(position = "dodge")
ggplot(iq_scores) +
aes(x = person, y = score, fill = test) +
geom_col(position = "dodge")
ggplot(iq_scores) +
aes(x = person, y = score, fill = test) +
geom_col(position = "dodge") +
scale_fill_colorblind()
library(ggthemes)
ggplot(iq_scores) +
aes(x = person, y = score, fill = test) +
geom_col(position = "dodge") +
scale_fill_colorblind()
library(virdis)
library(viridis)
ggplot(iq_scores) +
aes(x = person, y = test, fill = score) +
geom_raster() +
scale_fill_viridis(option = "magma")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
knitr::include_graphics("images/cost_areas1.jpeg")
knitr::include_graphics("images/cost_areas2.jpeg")
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, <aesthetic> = num == 1) +
geom_text() +
theme_void()
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, <aesthetic> = num == 1) +
geom_text() +
theme_void()
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num) +
geom_text() +
theme_void()
table_of_numbers
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, size = num == 3) +
geom_text() +
theme_void()
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, size = num == 1) +
geom_text() +
theme_void()
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, color = num == 1) +
geom_text() +
theme_void() +
scale_colour_colorblind
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, color = num == 1) +
geom_text() +
theme_void() +
scale_color_colorblind()
ggplot(table_of_numbers) +
aes(x = x, y = y, label = num, size = num == 1, color = num == 1) +
geom_text() +
theme_void() +
scale_color_colorblind()
ggplot(total_sales) +
aes(x = branch, y = sales) +
geom_col()
ggplot(total_sales) +
aes(x = branch, y = sales) +
geom_col() +
coord_flip()
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
library(forcats)
library(dplyr)
total_sales <-
mutate(total_sales, branch = fct_reorder(branch, sales))
ggplot(total_sales) +
aes(x = branch, y = sales) +
geom_col() +
coord_flip()
ggplot(total_sales) +
aes(x = branch, y = sales) +
geom_col() +
coord_flip()
total_sales <- total_sales %>%
mutate(branch = fct_reorder(branch, sales))
library(forcats)
library(tidyverse)
total_sales <- total_sales %>%
mutate(branch = fct_reorder(branch, sales))
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales) +
geom_col() +
coord_flip()
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == "Edinburgh") +
geom_col() +
scale_fill_manual(values = c('grey', 'red')) +
coord_flip()
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == "Edinburgh") +
geom_col() +
scale_fill_manual(values = c('grey', 'yellow'), guide = FALSE) +
coord_flip()
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == "Edinburgh") +
geom_col() +
scale_fill_manual(values = c('grey', 'blue'), guide = FALSE) +
coord_flip()
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == "Edinburgh") +
geom_col() +
scale_fill_manual(values = c("grey", "blue"), guide = FALSE) +
coord_flip()
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == c("Glasgow","Edinburgh")) +
geom_col() +
scale_fill_manual(values = c("grey", "blue"), guide = FALSE) +
coord_flip()
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch == "Edinburgh") +
geom_col() +
scale_fill_manual(values = c("grey", "blue"), guide = FALSE) +
coord_flip()
# replot the data
ggplot(total_sales) +
aes(x = branch, y = sales, fill = branch %in% c("Glasgow","Edinburgh")) +
geom_col() +
scale_fill_manual(values = c("grey", "blue"), guide = FALSE) +
coord_flip()
ggplot(monthly_sales) +
aes(x = branch, y = sales, fill = month) +
geom_col(position = "dodge") +
coord_flip()
head(monthly_sales)
ggplot(monthly_sales)+
aes(x = month, y = sales, group = branch, colour = branch) +
geom_line()
